# ByteFreezer Proxy Configuration
# Generated by Ansible on {{ ansible_date_time.iso8601 }}
# Host: {{ inventory_hostname }}

app:
  name: {{ config.app.name }}
  version: {{ config.app.version }}

# Logging configuration
logging:
  level: {{ config.logging.level }}
  encoding: {{ config.logging.encoding }}

# API server configuration  
server:
  api_port: {{ config.server.api_port }}

# UDP listener configuration
udp:
  enabled: {{ config.udp.enabled | lower }}
  host: "{{ config.udp.host }}"
  read_buffer_size_bytes: {{ config.udp.read_buffer_size_bytes }}
  max_batch_lines: {{ config.udp.max_batch_lines }}
  max_batch_bytes: {{ config.udp.max_batch_bytes }}
  batch_timeout_seconds: {{ config.udp.batch_timeout_seconds }}
  enable_compression: {{ config.udp.enable_compression | lower }}
  compression_level: {{ config.udp.compression_level }}
  
  # Multiple port configuration with dataset mapping
  listeners:
{% for listener in config.udp.listeners %}
    - port: {{ listener.port }}
      dataset_id: "{{ listener.dataset_id }}"
{% if listener.tenant_id is defined %}
      tenant_id: "{{ listener.tenant_id }}"
{% endif %}
{% endfor %}

# Global tenant configuration
tenant_id: "{{ config.tenant_id }}"
bearer_token: "{{ config.bearer_token }}"

# Bytefreezer-receiver configuration
receiver:
  base_url: "{{ config.receiver.base_url }}"
  timeout_seconds: {{ config.receiver.timeout_seconds }}
  retry_count: {{ config.receiver.retry_count }}
  retry_delay_seconds: {{ config.receiver.retry_delay_seconds }}

# SOC alerting configuration
soc:
  enabled: {{ config.soc.enabled | lower }}
  endpoint: "{{ config.soc.endpoint }}"
  timeout: {{ config.soc.timeout }}

# OpenTelemetry configuration
otel:
  enabled: {{ config.otel.enabled | lower }}
  endpoint: "{{ config.otel.endpoint }}"
  service_name: "{{ config.otel.service_name }}"
  scrapeIntervalseconds: {{ config.otel.scrapeIntervalseconds }}

# Housekeeping configuration
housekeeping:
  enabled: {{ config.housekeeping.enabled | lower }}
  intervalseconds: {{ config.housekeeping.intervalseconds }}

# Local spooling for failed uploads
spooling:
  enabled: {{ config.spooling.enabled | lower }}
  directory: "{{ config.spooling.directory }}"
  max_size_bytes: {{ config.spooling.max_size_bytes }}
  retry_attempts: {{ config.spooling.retry_attempts }}
  retry_interval_seconds: {{ config.spooling.retry_interval_seconds }}
  cleanup_interval_seconds: {{ config.spooling.cleanup_interval_seconds }}

# Development mode
dev: {{ config.dev | lower }}