---
- name: Remove ByteFreezer Proxy service
  hosts: all
  become: yes
  vars:
    bytefreezer_binary_dest: "/usr/local/bin/bytefreezer-proxy"
    bytefreezer_config_dir: "/etc/bytefreezer-proxy"
    bytefreezer_log_dir: "/var/log/bytefreezer-proxy"
    bytefreezer_service_path: "/etc/systemd/system/bytefreezer-proxy.service"
    bytefreezer_logrotate_path: "/etc/logrotate.d/bytefreezer-proxy"
    bytefreezer_spooling_dir: "/var/spool/bytefreezer-proxy"
    backup_on_remove: "{{ bytefreezer_proxy_backup_on_remove | default(false) }}"
    backup_dir: "{{ bytefreezer_proxy_backup_dir | default('/opt/backups/bytefreezer-proxy') }}"
    remove_spooling_dir: "{{ bytefreezer_proxy_remove_spooling_dir | default(false) }}"

  pre_tasks:
    - name: Check if service exists
      ansible.builtin.stat:
        path: "{{ bytefreezer_service_path }}"
      register: service_exists

    - name: Display removal information
      debug:
        msg:
          - "Removing ByteFreezer Proxy service..."
          - "Service exists: {{ service_exists.stat.exists }}"
          - "Backup data: {{ backup_on_remove }}"

  tasks:
    - name: Stop and disable service
      ansible.builtin.shell: |
        sudo systemctl stop bytefreezer-proxy || true
        sudo systemctl disable bytefreezer-proxy || true
        timeout 30 sudo systemctl daemon-reload || echo "daemon-reload completed or timed out"
      when: service_exists.stat.exists
      ignore_errors: yes

    - name: Create backup directory
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: backup_on_remove

    - name: Backup configuration and data
      ansible.builtin.shell: |
        tar -czf "{{ backup_dir }}/bytefreezer-proxy-removal-backup-{{ ansible_date_time.epoch }}.tar.gz" \
          --ignore-failed-read \
          "{{ bytefreezer_config_dir }}" \
          "{{ bytefreezer_log_dir }}" \
          "{{ bytefreezer_spooling_dir }}" \
          2>/dev/null || true
      when: backup_on_remove
      ignore_errors: yes

    - name: Remove systemd service file
      ansible.builtin.shell: |
        sudo rm -f "{{ bytefreezer_service_path }}"
        timeout 30 sudo systemctl daemon-reload || echo "daemon-reload completed or timed out"
      ignore_errors: yes

    - name: Remove logrotate configuration
      ansible.builtin.shell: |
        sudo rm -f "{{ bytefreezer_logrotate_path }}"
      ignore_errors: yes

    - name: Remove binary
      ansible.builtin.shell: |
        sudo rm -f "{{ bytefreezer_binary_dest }}"
      ignore_errors: yes

    - name: Remove configuration directory
      ansible.builtin.shell: |
        sudo rm -rf "{{ bytefreezer_config_dir }}"
      ignore_errors: yes

    - name: Remove log directory
      ansible.builtin.shell: |
        sudo rm -rf "{{ bytefreezer_log_dir }}"
      ignore_errors: yes

    - name: Remove spooling directory (only if explicitly requested)
      ansible.builtin.shell: |
        sudo rm -rf "{{ bytefreezer_spooling_dir }}"
      when: remove_spooling_dir
      ignore_errors: yes

  post_tasks:
    - name: Verify removal
      ansible.builtin.stat:
        path: "{{ bytefreezer_service_path }}"
      register: service_removed

    - name: Display removal status
      debug:
        msg:
          - "ByteFreezer Proxy removal completed!"
          - "Service removed: {{ not service_removed.stat.exists }}"
          - "Binary removed: {{ bytefreezer_binary_dest }}"
          - "Directories removed: {{ bytefreezer_config_dir }}, {{ bytefreezer_log_dir }}"
          - "Spooling directory preserved: {{ bytefreezer_spooling_dir }} (unless remove_spooling_dir=true)"
          - "Backup created: {{ backup_on_remove }}"

